version: '3'

dotenv:
  - .env

vars:
  MODULE: github.com/FilipSolich/go-template
  BIN: bin

  VERSION: '{{default "latest" .VERSION}}'
  REGISTRY: ghcr.io
  IMAGE: '{{.REGISTRY}}/filipsolich/go-template'
  TAG: '{{.IMAGE}}:{{.VERSION}}'

  DATETIME:
    sh: date --utc --iso-8601=seconds
  COMMIT:
    sh: git rev-parse --short HEAD

tasks:
  default:
    silent: true
    cmds:
      - task -l --sort none

  fmt:
    desc: Format code
    cmds:
      - go fmt ./...

  vet:
    desc: Vet code
    cmds:
      - go vet ./...

  lint:
    desc: Lint code
    cmds:
      - go tool golangci-lint run

  build:
    desc: Build binaries
    cmds:
      - task: build:server

  build:server:
    desc: Build server
    cmds:
      - GOAMD64=v2 go build
        -ldflags "-X {{.MODULE}}/internal/version.Version={{.VERSION}} -X {{.MODULE}}/internal/version.Commit={{.COMMIT}}"
        -o bin/server {{.MODULE}}/cmd/server

  run:
    desc: Run server
    deps: [build:server]
    cmds:
      - '{{.BIN}}/server'

  test:
    desc: Run tests
    cmds:
      - go test -v ./...

  test:coverage:
    desc: Run tests with coverage
    cmds:
      - go test -v -coverprofile=coverage.out ./...
      - go tool cover -html=coverage.out

  clean:
    desc: Clean up
    cmds:
      - go clean
      - rm -rf bin
      - rm -rf .task
      - rm -f coverage.out
      - find . -name '__debug_*' -type f -delete

  pre-commit:
    desc: Run pre-commit checks
    cmds:
      - task: fmt
      - task: vet
      - task: lint
      - task: build
      - task: test

  docker:build:
    desc: Build Docker image
    cmds:
      - docker build
        --build-arg MODULE={{.MODULE}}
        --build-arg CREATED={{.DATETIME}}
        --build-arg VERSION={{.VERSION}}
        --build-arg COMMIT={{.COMMIT}}
        -t {{.TAG}} .

  docker:push:
    desc: Push Docker image
    cmds:
      - docker push {{.TAG}}
